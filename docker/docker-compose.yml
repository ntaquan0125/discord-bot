version: '3.1'

services:
  bot-dev:
    image: botpif_dev:latest
    stdin_open: true # docker run -i
    tty: true # docker run -t
    privileged: true
    container_name: botdev
    volumes:
      - ./../:/pif/bot-playground
      - /dev/:/dev/
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      DISCORD_TOKEN: ${DISCORD_TOKEN}
      DISCORD_GUILD: ${DISCORD_GUILD}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      HUGGING_FACE_TOKEN: ${HUGGING_FACE_TOKEN}
      MONGO_DB_ROOT_USERNAME: root
      MONGO_DB_ROOT_PASSWORD: password
    profiles:
      - dev
  bot-test:
    image: botpif_test:latest
    stdin_open: true # docker run -i
    tty: true # docker run -t
    privileged: true
    container_name: bottest
    volumes:
      - ~/env:/env
    environment:
      ContainerName: bottest
      DISCORD_TOKEN: ${DISCORD_TOKEN}
      DISCORD_GUILD: ${DISCORD_GUILD}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      DATABASE_URL: mongodb://root:password@mongo:27017/?authSource=admin
      HUGGING_FACE_TOKEN: ${HUGGING_FACE_TOKEN}
      MONGO_DB_ROOT_USERNAME: root
      MONGO_DB_ROOT_PASSWORD: password
    profiles:
      - test
  bot-prod:
    image: botpif:latest
    restart: always
    privileged: true
    container_name: botprod
    environment:
      ContainerName: botprod
      DISCORD_TOKEN: ${DISCORD_TOKEN}
      DISCORD_GUILD: ${DISCORD_GUILD}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      HUGGING_FACE_TOKEN: ${HUGGING_FACE_TOKEN}
      DATABASE_URL: ${MONGO_DB_ROOT_URL}
      MONGO_DB_ROOT_USERNAME: ${MONGO_DB_ROOT_USERNAME}
      MONGO_DB_ROOT_PASSWORD: ${MONGO_DB_ROOT_PASSWORD}
    volumes:
      - ./config/:/pif/bot-playground/config/
    profiles:
      - prod
  mongo-dev:
    image: mongo
    container_name: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - ./../database/db:/data/db
      - ./../database/dev.archive:/Databases/dev.archive
      - ./../database/production:/Databases/production
    profiles:
      - test
      - dev
  mongo-express-dev:
    image: mongo-express
    container_name: mexpress
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://root:password@mongo:27017/?authSource=admin
      ME_CONFIG_BASICAUTH_USERNAME: mexpress
      ME_CONFIG_BASICAUTH_PASSWORD: mexpress
    links:
      - mongo-dev
    restart: unless-stopped
    ports:
      - "8081:8081"
    profiles:
      - test
      - dev
  mongo-prod:
    image: mongo
    container_name: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_DB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_DB_ROOT_PASSWORD}
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - ./database/db:/data/db
      - ./database/dev.archive:/Databases/dev.archive
      - ./database/production:/Databases/production
    profiles:
      - prod
  mongo-express-prod:
    image: mongo-express
    container_name: mexpress
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_DB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_DB_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_URL: ${MONGO_DB_ROOT_URL}
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_DB_ROOT_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_DB_ROOT_PASSWORD}
    links:
      - mongo-dev
    restart: unless-stopped
    ports:
      - "8088:8081"
    profiles:
      - prod

networks:
  mongo-compose-network:
    driver: bridge
