version: '3.1'

services:
  bot-dev:
    image: pifdev:latest
    stdin_open: true # docker run -i
    tty: true # docker run -t
    privileged: true
    container_name: botdev
    volumes:
      - ./../:/pif/bot-playground
      - /dev/:/dev/
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DISCORD_TOKEN=${DISCORD_TOKEN}
      - DISCORD_GUILD=${DISCORD_GUILD}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - HUGGING_FACE_TOKEN=${HUGGING_FACE_TOKEN}
    profiles:
      - dev
  bot-test:
    image: botpif_test:latest
    stdin_open: true # docker run -i
    tty: true # docker run -t
    privileged: true
    container_name: bottest
    volumes:
      - ~/env:/env
    environment:
      - ContainerName=bottest
      - DISCORD_TOKEN=${DISCORD_TOKEN}
      - DISCORD_GUILD=${DISCORD_GUILD}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - HUGGING_FACE_TOKEN=${HUGGING_FACE_TOKEN}
    profiles:
      - test
  bot-prod:
    image: botpif:latest
    restart: always
    privileged: true
    container_name: botprod
    environment:
      - ContainerName=botprod
      - DISCORD_TOKEN=${DISCORD_TOKEN}
      - DISCORD_GUILD=${DISCORD_GUILD}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - HUGGING_FACE_TOKEN=${HUGGING_FACE_TOKEN}
    profiles:
      - prod
  db:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 'test_pass'
      MYSQL_USER: 'test'
      MYSQL_PASS: 'pass'
    profiles:
      - prod
      - dev
      - test
    volumes:
      - ~/mysql:/var/lib/mysql

volumes:
  my-datavolume:
